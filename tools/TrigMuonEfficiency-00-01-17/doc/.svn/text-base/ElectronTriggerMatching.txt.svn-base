*********************************************************************
*** standalone electron trigger matching code for ntuple analysis ***
*********************************************************************

The package will work on NTUP_SMWZ or any other ntuples which
includes TrigEgammaD3PDObject.

- e-mu trigger is under consideration

Installation
============
0) change directory to util

1) type "setup.sh <path to header file>"
     where <path to header file> is the path to the header file generated by
     a) MakeSelector() / MakeChain()
       or
     b) D3PDMakerReader for trigger variables

     [the generated header file by MakeSelector() / MakeChain() or D3PDMakerReader
      should contain the following variables
      - trig_DB_SMK
      - trig_Nav_n
      - trig_Nav_chain_ChainId
      - trig_Nav_chain_RoIType
      - trig_Nav_chain_RoIIndex
      - trig_RoI_EF_e_egammaContainer_egamma_Electrons
      - trig_RoI_EF_e_egammaContainer_egamma_ElectronsStatus
      - trig_EF_el_n
      - trig_EF_el_eta
      - trig_EF_el_phi
     ]

2) type ...
   a) "make Makefile.StandAlone" for analysis based on MakeSelector() / MakeChain()
   b) "make Makefile.RootCore" for analysis based on D3PDMakerReader


Usage
=====
0) in your root analysis macro, include the following line
   "gSystem->Load("<path to TrigMuonEfficiency>/lib/libTrigMuonEfficiency.so");"

1) in your analysis code, include the following line
   #include "TrigMuonEfficiency/ElectronTriggerMatching.h"

2) in your analysis code, make a ElectronTriggerMatching object by
    ElectronTriggerMatching tool = ElectronTriggerMatching(<class object>);
   where <class object> is an instance of the class defined in header file
   produced by "MakeClass()" / "MakeSelector()" or pointer to D3PDReader object for trigger variables

   RECOMMENDED: if you have "physicsMeta/TrigConfTree" available in your
   analysis job try the following
    ElectronTriggerMatching tool = ElectronTriggerMatching(<class object>, <TTree pointer for physicsMeta/TrigConfTree);

3) single electron trigger:
   in event loop, call
    tool.match(<eta>, <phi>, <chain name>);
   where <eta>, <phi> are offline electron information and <chain name> is an
   EF electron trigger name, ex. "EF_e20_medium"
   the method returns true if matching trigger object is found false otherwise



List of triggers available for matching
with the following constructor
 tool = ElectronTriggerMatching(<class object>)
=======================================
EF_e20_medium
EF_e22_medium
EF_e22vh_medium1

# eof
